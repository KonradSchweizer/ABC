def identify_participant(self):
    self.minimize_window() # minimze window before gui
    valid = False
    while not valid:
        gui_part_title = self.language["Presession"]["Gui Participant ID"]["Title"]
        gui_part_field1 = self.language["Presession"]["Gui Participant ID"]["Field1"]
        gui_part_field2 = self.language["Presession"]["Gui Participant ID"]["Field2"]
        gui_part_options2 = self.language["Presession"]["Gui Participant ID"]["Options2"]
        participant_info = {gui_part_field1: "",
                            gui_part_field2: gui_part_options2}
        gui.DlgFromDict(dictionary=participant_info, title=gui_part_title)
        if os.path.exists(f"{self.config_path}/{self.experiment_name}_presession_{participant_info[gui_part_field1]}.json"):
            gui_over_title = self.language["Presession"]["Gui Overwrite"]["Title"]
            gui_over_field1 = self.language["Presession"]["Gui Overwrite"]["Field1"]
            options1 = self.language["Presession"]["Gui Overwrite"]["Options1"]
            overwrite = {gui_over_field1: options1}
            gui.DlgFromDict(dictionary=overwrite, title=gui_over_title)
            if overwrite[gui_over_field1] == options1[0]:
                os.remove(f"{self.config_path}/{self.experiment_name}_presession_{participant_info[gui_part_field1]}.json")
                valid = True
        else:
            valid = True
    self.data["Participant ID"] = participant_info[gui_part_field1]
    self.data["Sex"] = participant_info[gui_part_field2]
    self.data["Condition"] = "" # Condition is determined at first session
    # Session info
    self.data["Current Session"] = 0
    self.maximize_window() # maximize window after gui