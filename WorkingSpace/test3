import tkinter as tk
from tkinter import ttk
import os

class YourClass:  # Replace with your actual class name
    def __init__(self):
        # Initialize your class variables here.
        self.data = {}
        # Initialize other necessary variables
        self.config_path = "config_path"  # Replace with actual path
        self.experiment_name = "experiment_name"  # Replace with actual name
        self.language = {"Presession": {"Gui Participant ID": {"Title": "Title", "Field1": "ID", "Field2": "Gender", "Options2": ["Male", "Female"]},
                                        "Gui Overwrite": {"Field1": "Overwrite?", "Options1": ["Yes", "No"]}}}

    def data_update_and_destroy(self, participant_id, gender):
        self.data["Participant ID"] = participant_id
        self.data["Sex"] = gender
        
    def identify_participant(self):
        root = tk.Tk()
        root.withdraw()  # This will hide the main window
        
        window = tk.Toplevel(root)
        window.geometry('1920x1080')
        window.configure(bg='black')
        window.attributes('-topmost', True)
        window.after_idle(window.attributes, '-topmost', False)
        
        def validate_and_save():
            participant_id = id_entry.get()
            gender = gender_combobox.get()
            
            if len(participant_id) == 6 and participant_id.isdigit():
                file_path = f"{self.config_path}/{self.experiment_name}_presession_{participant_id}.json"
                
                if os.path.exists(file_path):
                    overwrite_dlg = tk.Toplevel(window)
                    overwrite_dlg.attributes('-topmost', True)
                    overwrite_dlg.after_idle(overwrite_dlg.attributes, '-topmost', False)
                    overwrite_label = tk.Label(overwrite_dlg, text=self.language["Presession"]["Gui Overwrite"]["Field1"])
                    overwrite_label.pack(pady=10)
                    
                    option = tk.StringVar(value=self.language["Presession"]["Gui Overwrite"]["Options1"][0])
                    
                    for val in self.language["Presession"]["Gui Overwrite"]["Options1"]:
                        tk.Radiobutton(overwrite_dlg, text=val, variable=option, value=val).pack()
                    
                    def overwrite():
                        if option.get() == self.language["Presession"]["Gui Overwrite"]["Options1"][0]:
                            os.remove(file_path)
                            overwrite_dlg.destroy()
                            window.destroy()
                            self.data_update_and_destroy(participant_id, gender)
                        else:
                            overwrite_dlg.destroy()
                    
                    overwrite_submit = tk.Button(overwrite_dlg, text="Submit", command=overwrite)
                    overwrite_submit.pack(pady=10)
                
                else:
                    window.destroy()
                    self.data_update_and_destroy(participant_id, gender)
            
            else:
                error_label = tk.Label(window, text="Invalid input, please enter a valid ID and gender", bg='black', fg='red')
                error_label.pack(pady=10)
        
        title_label = tk.Label(window, text=self.language["Presession"]["Gui Participant ID"]["Title"], bg='black', fg='white')
        title_label.pack(pady=10)
        
        id_label = tk.Label(window, text=self.language["Presession"]["Gui Participant ID"]["Field1"], bg='black', fg='white')
        id_label.pack(pady=10)
        
        id_entry = tk.Entry(window, bg='white')
        id_entry.pack(pady=10)
        
        gender_label = tk.Label(window, text=self.language["Presession"]["Gui Participant ID"]["Field2"], bg='black', fg='white')
        gender_label.pack(pady=10)
        
        gender_combobox = ttk.Combobox(window, values=self.language["Presession"]["Gui Participant ID"]["Options2"])
        gender_combobox.pack(pady=10)
        
        submit_button = tk.Button(window, text="Submit", command=validate_and_save, bg='grey')
        submit_button.pack(pady=20)
        
        window.bind('<Escape>', lambda event=None: window.destroy())
        window.mainloop()

obj = YourClass()
obj.identify_participant()
